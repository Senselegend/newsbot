# Last modified: 2024-03-26
def fix_political_references(text):
    """
    –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª–∏—Ç–∏–∫–æ–≤ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç
    """
    import re
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –¢—Ä–∞–º–ø–µ
    trump_patterns = [
        (r'–±—ã–≤—à(–∏–π|–µ–≥–æ|–µ–º—É) –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç(–∞|—É|–æ–º)? –°–®–ê –î–æ–Ω–∞–ª—å–¥(–∞|—É|–æ–º)? –¢—Ä–∞–º–ø(–∞|—É|–æ–º)?', '–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç –°–®–ê –î–æ–Ω–∞–ª—å–¥ –¢—Ä–∞–º–ø'),
        (r'—ç–∫—Å-–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç(–∞|—É|–æ–º)? –°–®–ê –î–æ–Ω–∞–ª—å–¥(–∞|—É|–æ–º)? –¢—Ä–∞–º–ø(–∞|—É|–æ–º)?', '–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç –°–®–ê –î–æ–Ω–∞–ª—å–¥ –¢—Ä–∞–º–ø'),
        (r'–î–æ–Ω–∞–ª—å–¥ –¢—Ä–∞–º–ø, –±—ã–≤—à–∏–π –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç –°–®–ê', '–î–æ–Ω–∞–ª—å–¥ –¢—Ä–∞–º–ø, –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç –°–®–ê'),
        (r'45(-–π)? –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç –°–®–ê', '–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç –°–®–ê'),
        (r'–¢–†–ê–ú–ü,', '–¢–†–ê–ú–ü:'),  # –§–æ—Ä–º–∞—Ç —Ü–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    ]
    
    for pattern, replacement in trump_patterns:
        text = re.sub(pattern, replacement, text, flags=re.IGNORECASE)
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
    
    # –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –ø–µ—Ä–µ–¥ –∑–Ω–∞–∫–∞–º–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è
    text = re.sub(r'\s+([.,;:!?])', r'\1', text)
    
    # –£–¥–∞–ª—è–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã
    text = re.sub(r'\s{2,}', ' ', text)
    
    # –£–¥–∞–ª—è–µ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ (–æ—Å—Ç–∞–≤–ª—è–µ–º –º–∞–∫—Å–∏–º—É–º –æ–¥–∏–Ω)
    text = re.sub(r'\n{3,}', '\n\n', text)
    
    # –£–¥–∞–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å–Ω—É—é –ª–∏–Ω–∏—é –≤ –∫–æ–Ω—Ü–µ, –µ—Å–ª–∏ –æ–Ω–∞ –µ—Å—Ç—å
    text = re.sub(r'\n+_{5,}$', '', text)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É (—ç–º–æ–¥–∑–∏ –∏ —Ö–µ—à—Ç–µ–≥–∏)
    lines = text.split('\n')
    first_line = lines[0]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —ç–º–æ–¥–∑–∏ –≤ –Ω–∞—á–∞–ª–µ
    emoji_pattern = re.compile(r'[\U0001F600-\U0001F64F\U0001F300-\U0001F5FF\U0001F680-\U0001F6FF\U0001F1E0-\U0001F1FF]')
    emojis = emoji_pattern.findall(first_line[:10])
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ö–µ—à—Ç–µ–≥–æ–≤
    hashtags = re.findall(r'#\w+', first_line)
    
    # –ï—Å–ª–∏ –Ω–µ—Ç —ç–º–æ–¥–∑–∏ –∏–ª–∏ —Ö–µ—à—Ç–µ–≥–æ–≤, –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ
    if not emojis or not hashtags:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–º—É –Ω–æ–≤–æ—Å—Ç–∏
        lower_text = text.lower()
        
        # –í—ã–±–∏—Ä–∞–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —ç–º–æ–¥–∑–∏
        if any(word in lower_text for word in ['—Ä–æ—Å—Å–∏—è', '—Ä—Ñ', '—Ä—É–±–ª—å']):
            emoji = 'üá∑üá∫'
        elif any(word in lower_text for word in ['—Å—à–∞', '–∞–º–µ—Ä–∏–∫', '–¥–æ–ª–ª–∞—Ä']):
            emoji = 'üá∫üá∏'
        elif any(word in lower_text for word in ['–∫–∏—Ç–∞–π', '—é–∞–Ω—å']):
            emoji = 'üá®üá≥'
        elif any(word in lower_text for word in ['–Ω–µ—Ñ—Ç—å', '–≥–∞–∑', '—ç–Ω–µ—Ä–≥–µ—Ç–∏–∫']):
            emoji = 'üõ¢'
        elif any(word in lower_text for word in ['—Ñ–∏–Ω–∞–Ω—Å', '–±–∞–Ω–∫', '–∞–∫—Ü–∏']):
            emoji = 'üí∞'
        else:
            emoji = 'üìä'
            
        # –í—ã–±–∏—Ä–∞–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ —Ö–µ—à—Ç–µ–≥–∏
        if not hashtags:
            if any(word in lower_text for word in ['—Ä–æ—Å—Å–∏—è', '—Ä—Ñ']):
                hashtags = ['#—Ä–æ—Å—Å–∏—è']
            elif any(word in lower_text for word in ['—Å—à–∞', '–∞–º–µ—Ä–∏–∫']):
                hashtags = ['#—Å—à–∞']
            else:
                hashtags = ['#–Ω–æ–≤–æ—Å—Ç–∏']
                
            if any(word in lower_text for word in ['–Ω–µ—Ñ—Ç—å', '–≥–∞–∑']):
                hashtags.append('#–Ω–µ—Ñ—Ç—å')
            elif any(word in lower_text for word in ['–∞–∫—Ü–∏', '–æ–±–ª–∏–≥–∞—Ü']):
                hashtags.append('#—Ä—ã–Ω–∫–∏')
                
        # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤—É—é –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É
        new_first_line = emoji + ' ' + ' '.join(hashtags)
        
        # –£–¥–∞–ª—è–µ–º —ç–º–æ–¥–∑–∏ –∏ —Ö–µ—à—Ç–µ–≥–∏ –∏–∑ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏
        clean_first_line = re.sub(r'[\U0001F600-\U0001F64F\U0001F300-\U0001F5FF\U0001F680-\U0001F6FF\U0001F1E0-\U0001F1FF]', '', first_line)
        clean_first_line = re.sub(r'#\w+', '', clean_first_line).strip()
        
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º –Ω–æ–≤—É—é –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É —Å –æ—á–∏—â–µ–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º
        if clean_first_line:
            lines[0] = new_first_line + ' ' + clean_first_line
        else:
            lines[0] = new_first_line
            
        text = '\n'.join(lines)
    
    return text